{"version":3,"file":"static/js/485.f63aae68.chunk.js","mappings":"0MAGaA,EAAOC,EAAAA,EAAAA,GAAH,mEAKJC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,2CAITG,EAAYH,EAAAA,EAAAA,GAAH,yC,kBCRTI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAACR,EAAD,CAAWS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,UACE,SAACH,EAAD,oBAAeM,EAAMK,MAArB,aAA+BL,EAAMM,aAAaC,MAChD,EACA,GAFF,UAFKP,EAAME,GADA,KAYtB,C,sHClBYM,E,OAAQjB,EAAAA,GAAH,yE,SCoBlB,EAjBa,WACX,OAA4CkB,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAC,GACvBJ,EAAkBI,EACnB,GACF,GAAE,KAGD,6BACE,SAACP,EAAD,8BACA,SAACb,EAAA,EAAD,CAAYC,OAAQc,MAGzB,C,+LClBM,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBG,EAAAA,EAAAA,IAAA,4FAFpB,cAEGC,EAFH,yBAKIA,EAASF,KAAKG,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,kGAAkCC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,KAAzC,kBAIOP,EAAAA,EAAAA,IAAA,kHACmGM,EADnG,iBACiHC,EADjH,yBAJP,uBAGOL,EAHP,EAGDH,KAAQG,QAHP,kBAOIA,EAAQnB,KAAI,kBAAoB,CAAEG,GAAtB,EAAGA,GAAuBG,MAA1B,EAAOA,MAAP,KAPhB,gCASHc,QAAQC,MAAR,MATG,gFAaA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,8GAEoBT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,6DAFpB,uBAEKV,EAFL,EAEKA,KAGAV,EACNU,EADMV,MAAOqB,EACbX,EADaW,SAAUC,EACvBZ,EADuBY,YAAaC,EACpCb,EADoCa,aAAcC,EAClDd,EADkDc,OAAQvB,EAC1DS,EAD0DT,aALzD,kBAOI,CACLsB,aAAAA,EACAvB,MAAAA,EACAC,aAAAA,EACAoB,SAAAA,EACAC,YAAAA,EACAE,OAAAA,IAbC,gCAgBHV,QAAQC,MAAR,MAhBG,gFAoBA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA4BL,GAA5B,kGAEoBT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,qEAFpB,uBAEKV,EAFL,EAEKA,KAFL,kBAKIA,EAAKgB,KAAKhC,KAAI,kBAAiD,CACpEiC,KADmB,EAAGA,KAEtBC,aAFmB,EAASA,aAG5BC,UAHmB,EAAuBA,UAI1CC,QAJmB,EAAkCA,QAAlC,KALlB,gCAYHhB,QAAQC,MAAR,MAZG,gFAgBA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BX,GAA/B,kGAEoBT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,4EAFpB,uBAEKV,EAFL,EAEKA,KAFL,kBAKIA,EAAKG,QAAQnB,KAAI,kBAA8B,CACpDsC,OADsB,EAAGA,OAEzBC,QAFsB,EAAWA,QAGjCpC,GAHsB,EAAoBA,GAApB,KALrB,gCAWHiB,QAAQC,MAAR,MAXG,gF","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/movieAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  font-size: 14px;\n  padding-left: 24px;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: #2662bd;\n`;\n\nexport const MovieName = styled.h2`\n  padding: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieLink, List, MovieName } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MovieName>{`${movie.title} (${movie.release_date.slice(\n              0,\n              4\n            )})`}</MovieName>\n          </MovieLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin: 18px 0;\n  text-transform: uppercase;\n`;\n","import { useState, useEffect } from 'react';\nimport { getMoviesTrending } from 'services/movieAPI';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    getMoviesTrending().then(data => {\n      setTrendingMovies(data);\n    });\n  }, []);\n\n  return (\n    <main>\n      <Title>Trending today</Title>\n      <MoviesList movies={trendingMovies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport async function getMoviesTrending() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=63f559983b2c566f4ead7a47a8a9015b`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesByQuery({ query, page }) {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US&query=${query}&page=${page}&include_adult=false`\n    );\n    return results.map(({ id, title }) => ({ id, title }));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US`\n    );\n    const { title, overview, poster_path, vote_average, genres, release_date } =\n      data;\n    return {\n      vote_average,\n      title,\n      release_date,\n      overview,\n      poster_path,\n      genres,\n    };\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US`\n    );\n    return data.cast.map(({ name, profile_path, character, cast_id }) => ({\n      name,\n      profile_path,\n      character,\n      cast_id,\n    }));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US&page=1`\n    );\n    return data.results.map(({ author, content, id }) => ({\n      author,\n      content,\n      id,\n    }));\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["List","styled","MovieLink","Link","MovieName","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","release_date","slice","Title","useState","trendingMovies","setTrendingMovies","useEffect","getMoviesTrending","then","data","axios","response","results","console","error","getMoviesByQuery","query","page","getMovieById","movieId","overview","poster_path","vote_average","genres","getMovieCast","cast","name","profile_path","character","cast_id","getMovieReviews","author","content"],"sourceRoot":""}