{"version":3,"file":"static/js/909.bd052654.chunk.js","mappings":"8LAsCA,UAlCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAC,GACzBN,EACEM,EAAKC,KAAI,SAAAC,GAAI,OACX,2BACE,gBACEC,IAAG,yCAAoCD,EAAKE,cAC5CC,IAAKH,EAAKI,KACVC,MAAM,QACNC,QAAS,SAAAC,GACPA,EAAEC,OAAOP,IACP,sJACH,KAEH,uBAAID,EAAKI,QACT,uCAAeJ,EAAKS,eAXbT,EAAKU,QADH,IAgBhB,GACF,GAAE,CAACjB,KAGF,4BACE,kCACA,wBAAKF,MAGV,C,+LClCM,SAAeoB,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,4FAFpB,cAEGC,EAFH,yBAKIA,EAASf,KAAKgB,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,kGAAkCC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,KAAzC,kBAIOP,EAAAA,EAAAA,IAAA,kHACmGM,EADnG,iBACiHC,EADjH,yBAJP,uBAGOL,EAHP,EAGDhB,KAAQgB,QAHP,kBAOIA,EAAQf,KAAI,kBAAoB,CAAEqB,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,KAPhB,gCASHN,QAAQC,MAAR,MATG,gFAaA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4B7B,GAA5B,8GAEoBmB,EAAAA,EAAAA,IAAA,6CACiBnB,EADjB,6DAFpB,uBAEKK,EAFL,EAEKA,KAGAuB,EACNvB,EADMuB,MAAOE,EACbzB,EADayB,SAAUC,EACvB1B,EADuB0B,YAAaC,EACpC3B,EADoC2B,aAAcC,EAClD5B,EADkD4B,OAAQC,EAC1D7B,EAD0D6B,aALzD,kBAOI,CACLF,aAAAA,EACAJ,MAAAA,EACAM,aAAAA,EACAJ,SAAAA,EACAC,YAAAA,EACAE,OAAAA,IAbC,gCAgBHX,QAAQC,MAAR,MAhBG,gFAoBA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,kGAEoBmB,EAAAA,EAAAA,IAAA,6CACiBnB,EADjB,qEAFpB,uBAEKK,EAFL,EAEKA,KAFL,kBAKIA,EAAKP,KAAKQ,KAAI,kBAAiD,CACpEK,KADmB,EAAGA,KAEtBF,aAFmB,EAASA,aAG5BO,UAHmB,EAAuBA,UAI1CC,QAJmB,EAAkCA,QAAlC,KALlB,gCAYHK,QAAQC,MAAR,MAZG,gFAgBA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnC,GAA/B,kGAEoBmB,EAAAA,EAAAA,IAAA,6CACiBnB,EADjB,4EAFpB,uBAEKK,EAFL,EAEKA,KAFL,kBAKIA,EAAKgB,QAAQf,KAAI,kBAA8B,CACpD8B,OADsB,EAAGA,OAEzBC,QAFsB,EAAWA,QAGjCV,GAHsB,EAAoBA,GAApB,KALrB,gCAWHL,QAAQC,MAAR,MAXG,gF","sources":["components/MovieInfo/Cast/Cast.jsx","services/movieAPI.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from 'services/movieAPI';\n\nconst Cast = () => {\n  const [cast, setCast] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(data => {\n      setCast(\n        data.map(elem => (\n          <li key={elem.cast_id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${elem.profile_path}`}\n              alt={elem.name}\n              width=\"150px\"\n              onError={e => {\n                e.target.src =\n                  'https://media.istockphoto.com/id/1216251206/vector/no-image-available-icon.jpg?b=1&s=170667a&w=0&k=20&c=MiWLEcUdxZONMlnsN_k5OCaz_nLviJB0Hvcz5Wlp5oI=';\n              }}\n            />\n            <p>{elem.name}</p>\n            <p>Character: {elem.character}</p>\n          </li>\n        ))\n      );\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>{cast}</ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nexport async function getMoviesTrending() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=63f559983b2c566f4ead7a47a8a9015b`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesByQuery({ query, page }) {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US&query=${query}&page=${page}&include_adult=false`\n    );\n    return results.map(({ id, title }) => ({ id, title }));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US`\n    );\n    const { title, overview, poster_path, vote_average, genres, release_date } =\n      data;\n    return {\n      vote_average,\n      title,\n      release_date,\n      overview,\n      poster_path,\n      genres,\n    };\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US`\n    );\n    return data.cast.map(({ name, profile_path, character, cast_id }) => ({\n      name,\n      profile_path,\n      character,\n      cast_id,\n    }));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US&page=1`\n    );\n    return data.results.map(({ author, content, id }) => ({\n      author,\n      content,\n      id,\n    }));\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","data","map","elem","src","profile_path","alt","name","width","onError","e","target","character","cast_id","getMoviesTrending","axios","response","results","console","error","getMoviesByQuery","query","page","id","title","getMovieById","overview","poster_path","vote_average","genres","release_date","getMovieReviews","author","content"],"sourceRoot":""}