{"version":3,"file":"static/js/317.aa6f4eb9.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Searchbox/Searchbox.jsx","pages/Movies/Movies.jsx","services/movieAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  font-size: 14px;\n  padding-left: 24px;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: #2662bd;\n`;\n\nexport const MovieName = styled.h2`\n  padding: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieLink, List, MovieName } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MovieName>{`${movie.title} (${movie.release_date.slice(\n              0,\n              4\n            )})`}</MovieName>\n          </MovieLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export const Searchbox = ({ onChange, value, onClick }) => {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Enter name of movie\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n      <button type=\"button\" onClick={onClick}>\n        Search\n      </button>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Searchbox } from 'components/Searchbox/Searchbox';\nimport { useEffect } from 'react';\nimport { getMoviesByQuery } from 'services/movieAPI';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [queryInput, setQueryInput] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query !== '') {\n      getMoviesByQuery({ query: query, page: 1 }).then(data => {\n        setMovies(data);\n      });\n    }\n    setMovies('');\n  }, [query]);\n\n  const handleButtonClick = () => {\n    if (queryInput === '') {\n      return alert('Sorry, nothing was found for your search');\n    }\n\n    updateQueryString(queryInput);\n    setQueryInput('');\n  };\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      <h1>Movies Search Page</h1>\n      <Searchbox\n        onClick={handleButtonClick}\n        value={queryInput}\n        onChange={setQueryInput}\n      />\n      {movies.length > 0 ? (\n        <MoviesList movies={movies} />\n      ) : (\n        <div>Not Movies...</div>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport async function getMoviesTrending() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=63f559983b2c566f4ead7a47a8a9015b`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesByQuery({ query, page }) {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US&query=${query}&page=${page}&include_adult=false`\n    );\n    return results.map(({ id, title }) => ({ id, title }));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US`\n    );\n    const { title, overview, poster_path, vote_average, genres, release_date } =\n      data;\n    return {\n      vote_average,\n      title,\n      release_date,\n      overview,\n      poster_path,\n      genres,\n    };\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US`\n    );\n    return data.cast.map(({ name, profile_path, character, cast_id }) => ({\n      name,\n      profile_path,\n      character,\n      cast_id,\n    }));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=63f559983b2c566f4ead7a47a8a9015b&language=en-US&page=1`\n    );\n    return data.results.map(({ author, content, id }) => ({\n      author,\n      content,\n      id,\n    }));\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["List","styled","MovieLink","Link","MovieName","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","release_date","slice","Searchbox","onChange","value","onClick","type","placeholder","e","target","useState","queryInput","setQueryInput","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMoviesByQuery","page","then","data","updateQueryString","alert","length","getMoviesTrending","axios","response","results","console","error","getMovieById","movieId","overview","poster_path","vote_average","genres","getMovieCast","cast","name","profile_path","character","cast_id","getMovieReviews","author","content"],"sourceRoot":""}